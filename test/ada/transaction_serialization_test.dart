import 'package:blockchain_utils/blockchain_utils.dart';
import 'package:on_chain/ada/ada.dart';
import 'package:test/test.dart';

void main() {
  _transactionSerialization();
}

void _transactionSerialization() {
  test('transaction_1', () {
    final input = TransactionInput(
        transactionId: TransactionHash(List<int>.filled(32, 0)), index: 0);
    final multiSig = ADABaseAddress(
        'addr_test1qq4p27385p3pl25rs39xj7e50na5pkkn59q0x3qtuj9nsdyput3kqejrzx0lt0p49mwq76x8wjm8y7erh0rg0q36cr0sjqt5x4');
    final output = TransactionOutput(
        serializationConfig: TransactionOutputSerializationConfig(
            encoding: TransactionOutputCborEncoding.shellyEra),
        address: multiSig,
        amount: Value(coin: BigInt.from(999000)));

    final ttl = BigInt.from(1000);
    final fee = BigInt.from(1000);
    final List<NativeScript> pubkeyNativeScripts = [
      NativeScriptScriptPubkey.fromPubKey(BytesUtils.fromHexString(
          '0071325e6664401e5fffcbce46bd522822e6aa485145b78a6fe556de6b5ec03ec5')),
    ];
    final List<NativeScript> onOfNativeScripts = [
      NativeScriptScriptNOfK(n: 1, nativeScripts: pubkeyNativeScripts)
    ];
    final auxiliaryData = AuxiliaryData(nativeScripts: onOfNativeScripts);
    final transaction = TransactionBody(
        inputs: TransactionInputs([input],
            serializationConfig: TransactionInputSerializationConfig(
                encoding: CborIterableEncodingType.definite)),
        outputs: TransactionOutputs([output],
            serializationConfig: TransactionOutputsSerializationConfig(
                encoding: CborIterableEncodingType.definite)),
        fee: fee,
        ttl: ttl,
        auxiliaryDataHash: auxiliaryData.toHash());

    final edSigner = AdaPrivateKey.fromHex(
        'c660e50315d76a53d80732efda7630cae8885dfb85c46378684b3c6103e1284a');
    final sig = edSigner.sign(transaction.toHash().data);
    final witness = TransactionWitnessSet(
        vKeys: VkeyWitnesses([
      Vkeywitness(
          vKey: Vkey(edSigner.publicKey().toBytes(false)),
          signature: Ed25519Signature(sig)),
    ]));
    final tr =
        ADATransaction(body: transaction, witnessSet: witness, isValid: true);

    final decode = ADATransaction.fromCborBytes(tr.serialize());
    expect(decode.serializeHex(), tr.serializeHex());
  });
  test('transaction_3', () {
    final data = BytesUtils.fromHexString(
        '');
    final tr = ADATransaction.fromCborBytes(data);
    expect(tr.serialize(), data);
  });

  test('transaction_4', () {
    final data = BytesUtils.fromHexString(
        '84a90081825820000000000000000000000000000000000000000000000000000000000000000000018182583900c05e80bdcf267e7fe7bf4a867afe54a65a3605b32aae830ed07f8e1ccc339a35f9e0fe039cf510c761d4dd29040c48e9657fdac7e9c01d941a00433af3021a00091053031903e8048582008200581ccc339a35f9e0fe039cf510c761d4dd29040c48e9657fdac7e9c01d9483028201581ca24e48f1c8558d0e494285be2c749b95ce3fcce58d6f3a2854313068581ccc339a35f9e0fe039cf510c761d4dd29040c48e9657fdac7e9c01d9483028201581c9d8e04ea22deb1084f47d5343ac9b68045efe68ebca5a5db5b3288df581ccc339a35f9e0fe039cf510c761d4dd29040c48e9657fdac7e9c01d9483028200581ccc339a35f9e0fe039cf510c761d4dd29040c48e9657fdac7e9c01d94581ccc339a35f9e0fe039cf510c761d4dd29040c48e9657fdac7e9c01d9482018201581c03efb5788e8713c844dfd32b2e91de1e309fefffd555f827cc9ee16405a3581de0409b662f7dd26ba2783e7b3cdad5d5a0db4cbb298159efa1eb2ff0a001581df0e38b62daf74261838cb710cd38fd231f5c20266298717a0f08fde80802581df003efb5788e8713c844dfd32b2e91de1e309fefffd555f827cc9ee164030b58200487ecbf31c4267e9ee01bda989fb0b0e07b134e77b80107df7c11610c3b77510d818258200101010101010101010101010101010101010101010101010101010101010101001282825820020202020202020202020202020202020202020202020202020202020202020200825820010101010101010101010101010101010101010101010101010101010101010100a20383582001efb5788e8713c844dfd32b2e91de1e309fefffd555f827cc9ee16401020304582002efb5788e8713c844dfd32b2e91de1e309fefffd555f827cc9ee16401020304582003efb5788e8713c844dfd32b2e91de1e309fefffd555f827cc9ee164010203040585840201d87980820101840202d87980820202840204d87980820202840301d87980820404840302d87980820505f5f6');
    final tr = ADATransaction.fromCborBytes(data);
    final fromJson = ADATransaction.fromJson(tr.toJson());
    expect(tr.serialize(), data);
    expect(fromJson.serialize(), data);
  });

  test('transaction_5', () {
    final data = BytesUtils.fromHexString(
        '84a500828258203b40265111d8bb3c3c608d95b3a0bf83461ace32d79336579a1939b3aad1c0b7018258203b40265111d8bb3c3c608d95b3a0bf83461ace32d79336579a1939b3aad1c0b7020182825839007749cb68126abf295466a51abbf179923e244b8c9605b4498e665edc3b9dd7b24c3d81307483d4131fcec8fa60a03f2228382840a3944b961a004c4b40825839007749cb68126abf295466a51abbf179923e244b8c9605b4498e665edc3b9dd7b24c3d81307483d4131fcec8fa60a03f2228382840a3944b961a0b989c9d021a0006da230b5820c968830ea6bcd0ddba019dcfae31f5e4befa33a4250b4dd56b9a69a40dc0d45e0d818258203b40265111d8bb3c3c608d95b3a0bf83461ace32d79336579a1939b3aad1c0b703a303815907d2010000332323232323232323232323232323322323232323222232325335332201b3333573466e1cd55ce9baa0044800080608c98c8060cd5ce00c80c00b1999ab9a3370e6aae7540092000233221233001003002323232323232323232323232323333573466e1cd55cea8062400046666666666664444444444442466666666666600201a01801601401201000e00c00a00800600466a02a02c6ae854030cd4054058d5d0a80599a80a80b9aba1500a3335501975ca0306ae854024ccd54065d7280c1aba1500833501502035742a00e666aa032042eb4d5d0a8031919191999ab9a3370e6aae75400920002332212330010030023232323333573466e1cd55cea8012400046644246600200600466a056eb4d5d0a80118161aba135744a004464c6405c66ae700bc0b80b04d55cf280089baa00135742a0046464646666ae68cdc39aab9d5002480008cc8848cc00400c008cd40add69aba15002302c357426ae8940088c98c80b8cd5ce01781701609aab9e5001137540026ae84d5d1280111931901519ab9c02b02a028135573ca00226ea8004d5d0a80299a80abae35742a008666aa03203a40026ae85400cccd54065d710009aba15002301f357426ae8940088c98c8098cd5ce01381301209aba25001135744a00226ae8940044d5d1280089aba25001135744a00226ae8940044d5d1280089aba25001135744a00226aae7940044dd50009aba15002300f357426ae8940088c98c8060cd5ce00c80c00b080b89931900b99ab9c4910350543500017135573ca00226ea800448c88c008dd6000990009aa80a911999aab9f0012500a233500930043574200460066ae880080508c8c8cccd5cd19b8735573aa004900011991091980080180118061aba150023005357426ae8940088c98c8050cd5ce00a80a00909aab9e5001137540024646464646666ae68cdc39aab9d5004480008cccc888848cccc00401401000c008c8c8c8cccd5cd19b8735573aa0049000119910919800801801180a9aba1500233500f014357426ae8940088c98c8064cd5ce00d00c80b89aab9e5001137540026ae854010ccd54021d728039aba150033232323333573466e1d4005200423212223002004357426aae79400c8cccd5cd19b875002480088c84888c004010dd71aba135573ca00846666ae68cdc3a801a400042444006464c6403666ae7007006c06406005c4d55cea80089baa00135742a00466a016eb8d5d09aba2500223263201533573802c02a02626ae8940044d5d1280089aab9e500113754002266aa002eb9d6889119118011bab00132001355012223233335573e0044a010466a00e66442466002006004600c6aae754008c014d55cf280118021aba200301213574200222440042442446600200800624464646666ae68cdc3a800a40004642446004006600a6ae84d55cf280191999ab9a3370ea0049001109100091931900819ab9c01101000e00d135573aa00226ea80048c8c8cccd5cd19b875001480188c848888c010014c01cd5d09aab9e500323333573466e1d400920042321222230020053009357426aae7940108cccd5cd19b875003480088c848888c004014c01cd5d09aab9e500523333573466e1d40112000232122223003005375c6ae84d55cf280311931900819ab9c01101000e00d00c00b135573aa00226ea80048c8c8cccd5cd19b8735573aa004900011991091980080180118029aba15002375a6ae84d5d1280111931900619ab9c00d00c00a135573ca00226ea80048c8cccd5cd19b8735573aa002900011bae357426aae7940088c98c8028cd5ce00580500409baa001232323232323333573466e1d4005200c21222222200323333573466e1d4009200a21222222200423333573466e1d400d2008233221222222233001009008375c6ae854014dd69aba135744a00a46666ae68cdc3a8022400c4664424444444660040120106eb8d5d0a8039bae357426ae89401c8cccd5cd19b875005480108cc8848888888cc018024020c030d5d0a8049bae357426ae8940248cccd5cd19b875006480088c848888888c01c020c034d5d09aab9e500b23333573466e1d401d2000232122222223005008300e357426aae7940308c98c804ccd5ce00a00980880800780700680600589aab9d5004135573ca00626aae7940084d55cf280089baa0012323232323333573466e1d400520022333222122333001005004003375a6ae854010dd69aba15003375a6ae84d5d1280191999ab9a3370ea0049000119091180100198041aba135573ca00c464c6401866ae700340300280244d55cea80189aba25001135573ca00226ea80048c8c8cccd5cd19b875001480088c8488c00400cdd71aba135573ca00646666ae68cdc3a8012400046424460040066eb8d5d09aab9e500423263200933573801401200e00c26aae7540044dd500089119191999ab9a3370ea00290021091100091999ab9a3370ea00490011190911180180218031aba135573ca00846666ae68cdc3a801a400042444004464c6401466ae7002c02802001c0184d55cea80089baa0012323333573466e1d40052002200723333573466e1d40092000212200123263200633573800e00c00800626aae74dd5000a4c24002920103505431001220021123230010012233003300200200133351222335122335004335500248811c2b194b7d10a3d2d3152c5f3a628ff50cb9fc11e59453e8ac7a1aea4500488104544e4654005005112212330010030021120011122002122122330010040031200101049f58200befb5788e8713c844dfd32b2e91de1e309fefffd555f827cc9ee16401020304ff0582840000d87980821a000fea341a1a96f311840001d87980821a000fea341a1a96f311f5f6');
    final tr = ADATransaction.fromCborBytes(data);
    expect(tr.serialize(), data);
    final fromJson = ADATransaction.fromJson(tr.toJson());
    expect(fromJson.serialize(), data);
  });

  test('transaction_6', () {
    final data = BytesUtils.fromHexString(
        '84a500828258203b40265111d8bb3c3c608d95b3a0bf83461ace32d79336579a1939b3aad1c0b7018258203b40265111d8bb3c3c608d95b3a0bf83461ace32d79336579a1939b3aad1c0b7020181825839007749cb68126abf295466a51abbf179923e244b8c9605b4498e665edc3b9dd7b24c3d81307483d4131fcec8fa60a03f2228382840a3944b961a0be4f309021a0006cef70b5820c968830ea6bcd0ddba019dcfae31f5e4befa33a4250b4dd56b9a69a40dc0d45e0d818258203b40265111d8bb3c3c608d95b3a0bf83461ace32d79336579a1939b3aad1c0b703a303815907d2010000332323232323232323232323232323322323232323222232325335332201b3333573466e1cd55ce9baa0044800080608c98c8060cd5ce00c80c00b1999ab9a3370e6aae7540092000233221233001003002323232323232323232323232323333573466e1cd55cea8062400046666666666664444444444442466666666666600201a01801601401201000e00c00a00800600466a02a02c6ae854030cd4054058d5d0a80599a80a80b9aba1500a3335501975ca0306ae854024ccd54065d7280c1aba1500833501502035742a00e666aa032042eb4d5d0a8031919191999ab9a3370e6aae75400920002332212330010030023232323333573466e1cd55cea8012400046644246600200600466a056eb4d5d0a80118161aba135744a004464c6405c66ae700bc0b80b04d55cf280089baa00135742a0046464646666ae68cdc39aab9d5002480008cc8848cc00400c008cd40add69aba15002302c357426ae8940088c98c80b8cd5ce01781701609aab9e5001137540026ae84d5d1280111931901519ab9c02b02a028135573ca00226ea8004d5d0a80299a80abae35742a008666aa03203a40026ae85400cccd54065d710009aba15002301f357426ae8940088c98c8098cd5ce01381301209aba25001135744a00226ae8940044d5d1280089aba25001135744a00226ae8940044d5d1280089aba25001135744a00226aae7940044dd50009aba15002300f357426ae8940088c98c8060cd5ce00c80c00b080b89931900b99ab9c4910350543500017135573ca00226ea800448c88c008dd6000990009aa80a911999aab9f0012500a233500930043574200460066ae880080508c8c8cccd5cd19b8735573aa004900011991091980080180118061aba150023005357426ae8940088c98c8050cd5ce00a80a00909aab9e5001137540024646464646666ae68cdc39aab9d5004480008cccc888848cccc00401401000c008c8c8c8cccd5cd19b8735573aa0049000119910919800801801180a9aba1500233500f014357426ae8940088c98c8064cd5ce00d00c80b89aab9e5001137540026ae854010ccd54021d728039aba150033232323333573466e1d4005200423212223002004357426aae79400c8cccd5cd19b875002480088c84888c004010dd71aba135573ca00846666ae68cdc3a801a400042444006464c6403666ae7007006c06406005c4d55cea80089baa00135742a00466a016eb8d5d09aba2500223263201533573802c02a02626ae8940044d5d1280089aab9e500113754002266aa002eb9d6889119118011bab00132001355012223233335573e0044a010466a00e66442466002006004600c6aae754008c014d55cf280118021aba200301213574200222440042442446600200800624464646666ae68cdc3a800a40004642446004006600a6ae84d55cf280191999ab9a3370ea0049001109100091931900819ab9c01101000e00d135573aa00226ea80048c8c8cccd5cd19b875001480188c848888c010014c01cd5d09aab9e500323333573466e1d400920042321222230020053009357426aae7940108cccd5cd19b875003480088c848888c004014c01cd5d09aab9e500523333573466e1d40112000232122223003005375c6ae84d55cf280311931900819ab9c01101000e00d00c00b135573aa00226ea80048c8c8cccd5cd19b8735573aa004900011991091980080180118029aba15002375a6ae84d5d1280111931900619ab9c00d00c00a135573ca00226ea80048c8cccd5cd19b8735573aa002900011bae357426aae7940088c98c8028cd5ce00580500409baa001232323232323333573466e1d4005200c21222222200323333573466e1d4009200a21222222200423333573466e1d400d2008233221222222233001009008375c6ae854014dd69aba135744a00a46666ae68cdc3a8022400c4664424444444660040120106eb8d5d0a8039bae357426ae89401c8cccd5cd19b875005480108cc8848888888cc018024020c030d5d0a8049bae357426ae8940248cccd5cd19b875006480088c848888888c01c020c034d5d09aab9e500b23333573466e1d401d2000232122222223005008300e357426aae7940308c98c804ccd5ce00a00980880800780700680600589aab9d5004135573ca00626aae7940084d55cf280089baa0012323232323333573466e1d400520022333222122333001005004003375a6ae854010dd69aba15003375a6ae84d5d1280191999ab9a3370ea0049000119091180100198041aba135573ca00c464c6401866ae700340300280244d55cea80189aba25001135573ca00226ea80048c8c8cccd5cd19b875001480088c8488c00400cdd71aba135573ca00646666ae68cdc3a8012400046424460040066eb8d5d09aab9e500423263200933573801401200e00c26aae7540044dd500089119191999ab9a3370ea00290021091100091999ab9a3370ea00490011190911180180218031aba135573ca00846666ae68cdc3a801a400042444004464c6401466ae7002c02802001c0184d55cea80089baa0012323333573466e1d40052002200723333573466e1d40092000212200123263200633573800e00c00800626aae74dd5000a4c24002920103505431001220021123230010012233003300200200133351222335122335004335500248811c2b194b7d10a3d2d3152c5f3a628ff50cb9fc11e59453e8ac7a1aea4500488104544e4654005005112212330010030021120011122002122122330010040031200101049f58200befb5788e8713c844dfd32b2e91de1e309fefffd555f827cc9ee16401020304ff0582840000d87980821a000fea341a1a96f311840001d87980821a000fea341a1a96f311f5f6');
    final tr = ADATransaction.fromCborBytes(data);
    expect(tr.serialize(), data);
    final fromJson = ADATransaction.fromJson(tr.toJson());
    expect(fromJson.serialize(), data);
  });

  test('transaction_8', () {
    final data = BytesUtils.fromHexString(
        '84a70081825820f58a5bc761b1efdcf4b5684f6ad5495854a0d64b866e2f0f525d134750d3511b010181825839007749cb68126abf295466a51abbf179923e244b8c9605b4498e665edc3b9dd7b24c3d81307483d4131fcec8fa60a03f2228382840a3944b96821b00000017486e49b3a2581c669fde3dd8395fb5ec314526126266fae4a42b16f1ec3a4ff07d43a3a144544e46541864581c8628d6d37eb1616de11787353ab2960a307a5ce57115ba5e320a817ea144544e46541864021a00089e4d09a2581c669fde3dd8395fb5ec314526126266fae4a42b16f1ec3a4ff07d43a3a144544e46541864581c8628d6d37eb1616de11787353ab2960a307a5ce57115ba5e320a817ea144544e465418640b5820db418f8d9577afe4b1df24d1a91e03d6324038ad37c4410c526dba18cabfcfa50d8182582069b0b867056a2d4fdc3827e23aa7069b125935e2def774941ca8cc7f9e0de774011281825820f58a5bc7adaadadcf4b5684f6ad5495854a0d64b866e2f0f525d134750d3511b02a203815907d2010000332323232323232323232323232323322323232323222232325335332201b3333573466e1cd55ce9baa0044800080608c98c8060cd5ce00c80c00b1999ab9a3370e6aae7540092000233221233001003002323232323232323232323232323333573466e1cd55cea8062400046666666666664444444444442466666666666600201a01801601401201000e00c00a00800600466a02a02c6ae854030cd4054058d5d0a80599a80a80b9aba1500a3335501975ca0306ae854024ccd54065d7280c1aba1500833501502035742a00e666aa032042eb4d5d0a8031919191999ab9a3370e6aae75400920002332212330010030023232323333573466e1cd55cea8012400046644246600200600466a056eb4d5d0a80118161aba135744a004464c6405c66ae700bc0b80b04d55cf280089baa00135742a0046464646666ae68cdc39aab9d5002480008cc8848cc00400c008cd40add69aba15002302c357426ae8940088c98c80b8cd5ce01781701609aab9e5001137540026ae84d5d1280111931901519ab9c02b02a028135573ca00226ea8004d5d0a80299a80abae35742a008666aa03203a40026ae85400cccd54065d710009aba15002301f357426ae8940088c98c8098cd5ce01381301209aba25001135744a00226ae8940044d5d1280089aba25001135744a00226ae8940044d5d1280089aba25001135744a00226aae7940044dd50009aba15002300f357426ae8940088c98c8060cd5ce00c80c00b080b89931900b99ab9c4910350543500017135573ca00226ea800448c88c008dd6000990009aa80a911999aab9f0012500a233500930043574200460066ae880080508c8c8cccd5cd19b8735573aa004900011991091980080180118061aba150023005357426ae8940088c98c8050cd5ce00a80a00909aab9e5001137540024646464646666ae68cdc39aab9d5004480008cccc888848cccc00401401000c008c8c8c8cccd5cd19b8735573aa0049000119910919800801801180a9aba1500233500f014357426ae8940088c98c8064cd5ce00d00c80b89aab9e5001137540026ae854010ccd54021d728039aba150033232323333573466e1d4005200423212223002004357426aae79400c8cccd5cd19b875002480088c84888c004010dd71aba135573ca00846666ae68cdc3a801a400042444006464c6403666ae7007006c06406005c4d55cea80089baa00135742a00466a016eb8d5d09aba2500223263201533573802c02a02626ae8940044d5d1280089aab9e500113754002266aa002eb9d6889119118011bab00132001355012223233335573e0044a010466a00e66442466002006004600c6aae754008c014d55cf280118021aba200301213574200222440042442446600200800624464646666ae68cdc3a800a40004642446004006600a6ae84d55cf280191999ab9a3370ea0049001109100091931900819ab9c01101000e00d135573aa00226ea80048c8c8cccd5cd19b875001480188c848888c010014c01cd5d09aab9e500323333573466e1d400920042321222230020053009357426aae7940108cccd5cd19b875003480088c848888c004014c01cd5d09aab9e500523333573466e1d40112000232122223003005375c6ae84d55cf280311931900819ab9c01101000e00d00c00b135573aa00226ea80048c8c8cccd5cd19b8735573aa004900011991091980080180118029aba15002375a6ae84d5d1280111931900619ab9c00d00c00a135573ca00226ea80048c8cccd5cd19b8735573aa002900011bae357426aae7940088c98c8028cd5ce00580500409baa001232323232323333573466e1d4005200c21222222200323333573466e1d4009200a21222222200423333573466e1d400d2008233221222222233001009008375c6ae854014dd69aba135744a00a46666ae68cdc3a8022400c4664424444444660040120106eb8d5d0a8039bae357426ae89401c8cccd5cd19b875005480108cc8848888888cc018024020c030d5d0a8049bae357426ae8940248cccd5cd19b875006480088c848888888c01c020c034d5d09aab9e500b23333573466e1d401d2000232122222223005008300e357426aae7940308c98c804ccd5ce00a00980880800780700680600589aab9d5004135573ca00626aae7940084d55cf280089baa0012323232323333573466e1d400520022333222122333001005004003375a6ae854010dd69aba15003375a6ae84d5d1280191999ab9a3370ea0049000119091180100198041aba135573ca00c464c6401866ae700340300280244d55cea80189aba25001135573ca00226ea80048c8c8cccd5cd19b875001480088c8488c00400cdd71aba135573ca00646666ae68cdc3a8012400046424460040066eb8d5d09aab9e500423263200933573801401200e00c26aae7540044dd500089119191999ab9a3370ea00290021091100091999ab9a3370ea00490011190911180180218031aba135573ca00846666ae68cdc3a801a400042444004464c6401466ae7002c02802001c0184d55cea80089baa0012323333573466e1d40052002200723333573466e1d40092000212200123263200633573800e00c00800626aae74dd5000a4c24002920103505431001220021123230010012233003300200200133351222335122335004335500248811c2b194b7d10a3d2d3152c5f3a628ff50cb9fc11e59453e8ac7a1aea4500488104544e46540050051122123300100300211200111220021221223300100400312001010582840100d87980821a002cb28c1a1a984d58840100d87980821a000fea341a1a96f311f5f6');
    final tr = ADATransaction.fromCborBytes(data);
    expect(tr.serialize(), data);
    final fromJson = ADATransaction.fromJson(tr.toJson());
    expect(fromJson.serialize(), data);
  });
  test('transaction_9', () {
    final data = BytesUtils.fromHexString(
        '84a60081825820f58a5bc761b1efdcf4b5684f6ad5495854a0d64b866e2f0f525d134750d3511b010181825839007749cb68126abf295466a51abbf179923e244b8c9605b4498e665edc3b9dd7b24c3d81307483d4131fcec8fa60a03f2228382840a3944b96821b000000174871721ea1581c8628d6d37eb1616de11787353ab2960a307a5ce57115ba5e320a817ea144544e46541864021a000575e209a1581c8628d6d37eb1616de11787353ab2960a307a5ce57115ba5e320a817ea144544e465418640b58200d8b61133426f0ba2be6a4329fac6b97c627d4aca29fda9f0ade1114b8ecf38f0d8182582069b0b867056a2d4fdc3827e23aa7069b125935e2def774941ca8cc7f9e0de77401a203815907d2010000332323232323232323232323232323322323232323222232325335332201b3333573466e1cd55ce9baa0044800080608c98c8060cd5ce00c80c00b1999ab9a3370e6aae7540092000233221233001003002323232323232323232323232323333573466e1cd55cea8062400046666666666664444444444442466666666666600201a01801601401201000e00c00a00800600466a02a02c6ae854030cd4054058d5d0a80599a80a80b9aba1500a3335501975ca0306ae854024ccd54065d7280c1aba1500833501502035742a00e666aa032042eb4d5d0a8031919191999ab9a3370e6aae75400920002332212330010030023232323333573466e1cd55cea8012400046644246600200600466a056eb4d5d0a80118161aba135744a004464c6405c66ae700bc0b80b04d55cf280089baa00135742a0046464646666ae68cdc39aab9d5002480008cc8848cc00400c008cd40add69aba15002302c357426ae8940088c98c80b8cd5ce01781701609aab9e5001137540026ae84d5d1280111931901519ab9c02b02a028135573ca00226ea8004d5d0a80299a80abae35742a008666aa03203a40026ae85400cccd54065d710009aba15002301f357426ae8940088c98c8098cd5ce01381301209aba25001135744a00226ae8940044d5d1280089aba25001135744a00226ae8940044d5d1280089aba25001135744a00226aae7940044dd50009aba15002300f357426ae8940088c98c8060cd5ce00c80c00b080b89931900b99ab9c4910350543500017135573ca00226ea800448c88c008dd6000990009aa80a911999aab9f0012500a233500930043574200460066ae880080508c8c8cccd5cd19b8735573aa004900011991091980080180118061aba150023005357426ae8940088c98c8050cd5ce00a80a00909aab9e5001137540024646464646666ae68cdc39aab9d5004480008cccc888848cccc00401401000c008c8c8c8cccd5cd19b8735573aa0049000119910919800801801180a9aba1500233500f014357426ae8940088c98c8064cd5ce00d00c80b89aab9e5001137540026ae854010ccd54021d728039aba150033232323333573466e1d4005200423212223002004357426aae79400c8cccd5cd19b875002480088c84888c004010dd71aba135573ca00846666ae68cdc3a801a400042444006464c6403666ae7007006c06406005c4d55cea80089baa00135742a00466a016eb8d5d09aba2500223263201533573802c02a02626ae8940044d5d1280089aab9e500113754002266aa002eb9d6889119118011bab00132001355012223233335573e0044a010466a00e66442466002006004600c6aae754008c014d55cf280118021aba200301213574200222440042442446600200800624464646666ae68cdc3a800a40004642446004006600a6ae84d55cf280191999ab9a3370ea0049001109100091931900819ab9c01101000e00d135573aa00226ea80048c8c8cccd5cd19b875001480188c848888c010014c01cd5d09aab9e500323333573466e1d400920042321222230020053009357426aae7940108cccd5cd19b875003480088c848888c004014c01cd5d09aab9e500523333573466e1d40112000232122223003005375c6ae84d55cf280311931900819ab9c01101000e00d00c00b135573aa00226ea80048c8c8cccd5cd19b8735573aa004900011991091980080180118029aba15002375a6ae84d5d1280111931900619ab9c00d00c00a135573ca00226ea80048c8cccd5cd19b8735573aa002900011bae357426aae7940088c98c8028cd5ce00580500409baa001232323232323333573466e1d4005200c21222222200323333573466e1d4009200a21222222200423333573466e1d400d2008233221222222233001009008375c6ae854014dd69aba135744a00a46666ae68cdc3a8022400c4664424444444660040120106eb8d5d0a8039bae357426ae89401c8cccd5cd19b875005480108cc8848888888cc018024020c030d5d0a8049bae357426ae8940248cccd5cd19b875006480088c848888888c01c020c034d5d09aab9e500b23333573466e1d401d2000232122222223005008300e357426aae7940308c98c804ccd5ce00a00980880800780700680600589aab9d5004135573ca00626aae7940084d55cf280089baa0012323232323333573466e1d400520022333222122333001005004003375a6ae854010dd69aba15003375a6ae84d5d1280191999ab9a3370ea0049000119091180100198041aba135573ca00c464c6401866ae700340300280244d55cea80189aba25001135573ca00226ea80048c8c8cccd5cd19b875001480088c8488c00400cdd71aba135573ca00646666ae68cdc3a8012400046424460040066eb8d5d09aab9e500423263200933573801401200e00c26aae7540044dd500089119191999ab9a3370ea00290021091100091999ab9a3370ea00490011190911180180218031aba135573ca00846666ae68cdc3a801a400042444004464c6401466ae7002c02802001c0184d55cea80089baa0012323333573466e1d40052002200723333573466e1d40092000212200123263200633573800e00c00800626aae74dd5000a4c24002920103505431001220021123230010012233003300200200133351222335122335004335500248811c2b194b7d10a3d2d3152c5f3a628ff50cb9fc11e59453e8ac7a1aea4500488104544e46540050051122123300100300211200111220021221223300100400312001010581840100d87980821a000fea341a1a96f311f5f6');
    final tr = ADATransaction.fromCborBytes(data);
    expect(tr.serialize(), data);
    final fromJson = ADATransaction.fromJson(tr.toJson());
    expect(fromJson.serialize(), data);
  });
  test('transaction_10', () {
    final data = BytesUtils.fromHexString(
        'a30083825820006697ef0c9285b7001ebe5a9e356fb50441e0af803773a99b7cbb0e9b7285700182582096631bf40bc2ae1e10b3c9157a4c711562c664b9744ed1f580b725e0589efcd001825820c15c423d624b3af3f032c079a1b390c472b8ba889b48dd581d0ea28f96a3687500018183581d705858df65800cfe8fc1419df2ca7132f5f76cc622bc26962a87c4c45c821a01312d00a2581c07e8df329b724e4be48ee32738125c06000de5448aaf93ed46d59e28a14844696e6f436f696e1903e8581cee8e37676f6ebb8e031dff493f88ff711d24aa68666a09d61f1d3fb3a25243727970746f44696e6f2d312d3030303030015243727970746f44696e6f2d312d3030303032015820979f68de9e070e75779f80ce5e6cc74f8d77661d65f2895c01d0a6f66eceb791021a0007a120');
    final tr = TransactionBody.fromCborBytes(data);
    expect(tr.serialize(), data);
    final fromJson = TransactionBody.fromJson(tr.toJson());
    expect(fromJson.serialize(), data);
  });
  test('transaction_11', () {
    final data = BytesUtils.fromHexString(
        '84a50081825820000000000000000000000000000000000000000000000000000000000000000000018002182a0b5820887e1b6416d750d871c0f5b7136b54f7b8e8b0e293379d090f38f8f821d08a290d81825820000000000000000000000000000000000000000000000000000000000000000000a30381582000efb5788e8713c844dfd32b2e91de1e309fefffd555f827cc9ee16401020304049f182aff0581840000182a821906a41a00059de4f5f6');
    //'84a50081825820000000000000000000000000000000000000000000000000000000000000000000018002182a0b5820887e1b6416d750d871c0f5b7136b54f7b8e8b0e293379d090f38f8f821d08a290d81825820000000000000000000000000000000000000000000000000000000000000000000a30381582000efb5788e8713c844dfd32b2e91de1e309fefffd555f827cc9ee16401020304049f182aff05a182000082182a821906a41a00059de4f5f6
    final tr = ADATransaction.fromCborBytes(data);
    expect(tr.serialize(), data);
    final fromJson = ADATransaction.fromJson(tr.toJson());
    expect(tr.toJson(), fromJson.toJson());
    expect(fromJson.serialize(), data);
  });
}
